// Code generated by ENTIQON.
// File: internal/core/driver/dialect_mysql.go
// Description: Provides MySQLDialect definition and initialization.
// Since: v1.4.0

package driver

// MySQLDialect implements the Dialect interface for MySQL-compatible databases.
//
// This dialect uses:
//   - Backtick quoting: `identifier`
//   - Generic positional placeholders: ?
//   - No native UPSERT (requires ON DUPLICATE KEY UPDATE)
//   - No RETURNING clause
//
// Since: v1.4.0
type MySQLDialect struct {
	BaseDialect
}

// NewMySQLDialect returns a new MySQLDialect instance,
// preconfigured with MySQL-compatible rules.
//
// Quoting style: `identifier`
// Placeholder style: ?
// SupportsUpsert: false
// SupportsReturning: false
//
// Since: v1.4.0
func NewMySQLDialect() *MySQLDialect {
	return &MySQLDialect{
		BaseDialect: BaseDialect{
			name:      "mysql",
			quotation: QuoteBacktick,
			placeholder: func(_ int) string {
				return "?"
			},
			supportsUpsert:    false,
			supportsReturning: false,
		},
	}
}
