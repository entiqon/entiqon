// Code generated by ENTIQON.
// File: internal/core/token/table.go
// Description: Provides the Table struct for SQL table references across builders.
// Since: v1.5.0

package token

import "strings"

// Table represents a table reference in SQL clauses such as FROM, INTO, or UPDATE target.
type Table struct {
	// Table is the name of the source or target table.
	Name string

	// Alias is the optional alias for the table (e.g., "orders o").
	Alias string
}

// NewTable creates a Table with a given name and no alias.
//
// Example:
//
//	t := NewTable("orders")
//	t.String() // "orders"
func NewTable(name string) Table {
	return NewTableWithAlias(name, "")
}

// NewTableWithAlias creates a Table with both name and alias.
//
// Example:
//
//	t := NewTableWithAlias("orders", "o")
//	t.String() // "orders o"
func NewTableWithAlias(name, alias string) Table {
	name = strings.TrimSpace(name)
	alias = strings.TrimSpace(alias)

	return Table{Name: name, Alias: alias}
}

// IsValid returns true if the table has a non-empty name.
func (t Table) IsValid() bool {
	return t.Name != ""
}

// String returns the table name with optional alias, excluding any SQL clause keyword.
//
// Output examples:
//
//	"orders"
//	"orders o"
func (t Table) String() string {
	if t.Alias != "" {
		return t.Name + " " + t.Alias
	}
	return t.Name
}
