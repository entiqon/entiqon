#!/usr/bin/env bash
# gcrel - GitHub Create Release CLI

set -euo pipefail

TITLE="Entiqon Release"
DATE=$(date +"%Y-%m-%d")
NOTES="No detailed notes provided."
VERSION=""
DRAFT=false
PRERELEASE=false

GREEN="\033[0;32m"
RED="\033[0;31m"
NC="\033[0m"

show_help() {
  cat <<EOF
Usage: gcrel -v <version> [options]

Options:
  -h, --help         Show this help message and exit
  -v, --version      Version to release (e.g. v1.14.0) [required]
  -t, --title        Release title (default: "Entiqon Release")
  -d, --date         Override release date (default: today)
  -n, --notes        Path to release notes file
      --draft        Mark release as draft (default: false)
      --prerelease   Mark release as prerelease (default: false)

Notes:
- Requires GitHub CLI (\`gh\`) configured with authentication.
- Automatically attaches release notes (from file if provided).
EOF
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help) show_help; exit 0 ;;
    -v|--version) VERSION="$2"; shift 2 ;;
    -t|--title) TITLE="$2"; shift 2 ;;
    -d|--date) DATE="$2"; shift 2 ;;
    -n|--notes)
      if [[ -f "$2" ]]; then
        NOTES=$(cat "$2")
      else
        echo -e "${RED}‚ùå Notes file not found: $2${NC}"
        exit 1
      fi
      shift 2
      ;;
    --draft) DRAFT=true; shift ;;
    --prerelease) PRERELEASE=true; shift ;;
    *) echo -e "${RED}‚ùå Unknown option: $1${NC}"; show_help; exit 1 ;;
  esac
done

if [[ -z "$VERSION" ]]; then
  echo -e "${RED}‚ùå Version is required${NC}"
  show_help
  exit 1
fi

# Build release notes body
BODY="${TITLE} ${VERSION}

Released on ${DATE}

${NOTES}
"

# Prepare flags
FLAGS=("--title" "${TITLE}" "--notes" "${BODY}")
$DRAFT && FLAGS+=("--draft")
$PRERELEASE && FLAGS+=("--prerelease")

echo -e "${GREEN}üöÄ Creating GitHub Release ${VERSION}...${NC}"
gh release create "${VERSION}" "${FLAGS[@]}"

echo -e "${GREEN}‚úÖ Successfully created release ${VERSION} on ${DATE}${NC}"
