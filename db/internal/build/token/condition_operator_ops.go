// Code generated by ENTIQON.
// File: db/internal/build/token/condition_operator_ops.go
// Description: Defines a minimal SQL Condition structure for use in builders.
// Since: v1.6.0

package token

import "fmt"

// knownOperators is the set of all supported SQL condition operators.
// Used internally by IsValid and ParseConditionOperator.
var knownOperators = map[ConditionOperator]struct{}{
	Between:            {},
	Equal:              {},
	GreaterThan:        {},
	GreaterThanOrEqual: {},
	IsNull:             {},
	IsNotNull:          {},
	LessThan:           {},
	LessThanOrEqual:    {},
	Like:               {},
	In:                 {},
	NotEqual:           {},
	NotIn:              {},
	NotLike:            {},
}

// IsValid returns true if the operator is in the list of supported SQL operators.
func (op ConditionOperator) IsValid() bool {
	_, ok := knownOperators[op]
	return ok
}

// ParseConditionOperator attempts to cast any input into a ConditionOperator.
//
// Accepts:
//   - string → ConditionOperator("...")
//   - []byte → converts to string
//   - already typed ConditionOperator
//
// Example:
//
//	op, err := ParseConditionOperator("=")
//	fmt.Println(op) // "="
func ParseConditionOperator(v any) (ConditionOperator, error) {
	switch x := v.(type) {
	case ConditionOperator:
		return x, nil
	case string:
		return ConditionOperator(x), nil
	case []byte:
		return ConditionOperator(x), nil
	default:
		return "", fmt.Errorf("unsupported operator type: %T", v)
	}
}
