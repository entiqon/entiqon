// Code generated by ENTIQON.
// File: db/internal/build/token/condition_operator.go
// Description: Defines all supported SQL operators for structured conditions.
// Since: v1.6.0

package token

// ConditionOperator defines a SQL comparison or logical operator used
// in condition tokens within WHERE, ON, or HAVING clauses.
//
// Each operator is represented as a string that matches its SQL syntax.
//
// Example:
//
//	var op ConditionOperator = In
//	fmt.Println(op) // Output: IN
type ConditionOperator string

const (
	// Equal represents the "=" operator.
	//
	// Example:
	//   Condition: "status = ?"
	//   Operator:  Equal
	//   Output:    "="
	Equal ConditionOperator = "="

	// NotEqual represents the "!=" operator.
	//
	// Example:
	//   Condition: "status != ?"
	//   Operator:  NotEqual
	//   Output:    "!="
	NotEqual ConditionOperator = "!="

	// GreaterThan represents the ">" operator.
	//
	// Example:
	//   Condition: "age > ?"
	//   Operator:  GreaterThan
	//   Output:    ">"
	GreaterThan ConditionOperator = ">"

	// GreaterThanOrEqual represents the ">=" operator.
	//
	// Example:
	//   Condition: "age >= ?"
	//   Operator:  GreaterThanOrEqual
	//   Output:    ">="
	GreaterThanOrEqual ConditionOperator = ">="

	// LessThan represents the "<" operator.
	//
	// Example:
	//   Condition: "age < ?"
	//   Operator:  LessThan
	//   Output:    "<"
	LessThan ConditionOperator = "<"

	// LessThanOrEqual represents the "<=" operator.
	//
	// Example:
	//   Condition: "age <= ?"
	//   Operator:  LessThanOrEqual
	//   Output:    "<="
	LessThanOrEqual ConditionOperator = "<="

	// In represents the "IN" operator.
	//
	// Example:
	//   Condition: "id IN (?)"
	//   Operator:  In
	//   Output:    "IN"
	In ConditionOperator = "IN"

	// NotIn represents the "NOT IN" operator.
	//
	// Example:
	//   Condition: "id NOT IN (?)"
	//   Operator:  NotIn
	//   Output:    "NOT IN"
	NotIn ConditionOperator = "NOT IN"

	// Between represents the "BETWEEN" operator.
	//
	// Example:
	//   Condition: "created BETWEEN ? AND ?"
	//   Operator:  Between
	//   Output:    "BETWEEN"
	Between ConditionOperator = "BETWEEN"

	// Like represents the "LIKE" operator.
	//
	// Example:
	//   Condition: "name LIKE ?"
	//   Operator:  Like
	//   Output:    "LIKE"
	Like ConditionOperator = "LIKE"

	// NotLike represents the "NOT LIKE" operator.
	//
	// Example:
	//   Condition: "name NOT LIKE ?"
	//   Operator:  NotLike
	//   Output:    "NOT LIKE"
	NotLike ConditionOperator = "NOT LIKE"

	// IsNull represents the "IS NULL" condition.
	//
	// Example:
	//   Condition: "deleted_at IS NULL"
	//   Operator:  IsNull
	//   Output:    "IS NULL"
	IsNull ConditionOperator = "IS NULL"

	// IsNotNull represents the "IS NOT NULL" condition.
	//
	// Example:
	//   Condition: "deleted_at IS NOT NULL"
	//   Operator:  IsNotNull
	//   Output:    "IS NOT NULL"
	IsNotNull ConditionOperator = "IS NOT NULL"
)
