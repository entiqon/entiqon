// Code generated by ENTIQON.
// File: internal/core/contracts/errorable.go
// Description: Defines the Errorable interface, representing any component that can expose an internal error state.
// Since: v1.6.0

package contract

// Errorable represents any construct that may expose an internal error state.
// It is typically implemented by token types (Column, Table, Condition) or by builders
// that need to report parsing, resolution, or binding errors.
//
// By depending on this interface, higher-level code can treat any Errorable uniformly:
//   - Filter out or log invalid elements before rendering.
//   - Inspect underlying error messages for diagnostics.
//   - Enforce validation contracts in builder pipelines.
//
// # Example
//
//	var tok Errorable = token.NewColumn("user.id")
//	tok.SetError("user.id", fmt.Errorf("invalid column"))
//	if tok.IsErrored() {
//	    fmt.Printf("Error: %v\n", tok.GetError())
//	}
//
//	// Output:
//	// Error: invalid column
type Errorable interface {
	// GetError returns the stored error value, or nil if no error has been recorded.
	//
	// This allows callers to inspect the exact error message or type.
	//
	// # Example
	//
	//	    var tok Errorable = token.NewColumn("user.id")
	//	    fmt.Println(tok.GetError()) // → <nil>
	//
	//	    tok.SetError("user.id", fmt.Errorf("missing column"))
	//	    fmt.Println(tok.GetError()) // → missing column
	GetError() error

	// IsErrored returns true if the current object contains a semantic or structural error.
	// A return value of false implies the token is considered valid.
	//
	// # Example
	//
	//	    var tok Errorable = token.NewTable("users")
	//	    fmt.Println(tok.IsErrored()) // → false
	//
	//	    tok.SetError("users", fmt.Errorf("table not found"))
	//	    fmt.Println(tok.IsErrored()) // → true
	IsErrored() bool

	// SetError marks the object as errored using the provided input and error.
	// Implementations typically store the `source` argument for diagnostic output
	// and overwrite any existing error state. This method does not return any value.
	//
	// # Example
	//
	//	    var tok Errorable = token.NewColumn("u.id")
	//	    tok.SetError("u.id", fmt.Errorf("invalid column"))
	//	    fmt.Println(tok.IsErrored()) // → true
	//	    fmt.Println(tok.GetError())  // → invalid column
	SetError(input string, err error)
}
