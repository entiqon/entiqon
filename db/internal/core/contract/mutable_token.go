// Code generated by ENTIQON.
// File: db/internal/core/contracts/mutable_token.go
// Description: Defines the MutableToken interface for mutating token identifiers and aliases.
// Since: v1.7.0

package contract

// MutableToken defines a generic interface for token mutation operations.
// Any type that implements SetName and SetAlias can be treated as MutableToken.
// BaseToken and its wrappers satisfy this interface.
//
// Example:
//
//	func ExampleMutableToken() {
//	    // Create a new BaseToken from raw input
//	    var m contracts.MutableToken = token.NewBaseToken("users.email AS e")
//
//	    // Override the parsed identifier (name)
//	    m.SetName("email")
//	    // Override the parsed alias
//	    m.SetAlias("user_email")
//
//	    // Type‐assert back to *BaseToken to call getters
//	    b := m.(*token.BaseToken)
//	    fmt.Println(b.GetName())   // Output: email
//	    fmt.Println(b.GetAlias())  // Output: user_email
//	}
type MutableToken interface {
	// SetAlias replaces the parsed alias of the token.
	// Nil receiver → no-op.
	//
	// Since: v1.7.0
	SetAlias(alias string)

	// SetName replaces the parsed identifier (name) of the token.
	// Nil receiver → no-op.
	//
	// Since: v1.7.0
	SetName(name string)
}
